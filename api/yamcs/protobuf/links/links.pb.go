// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: yamcs/protobuf/links/links.proto

package links

import (
	_ "github.com/jaops-space/grafana-yamcs-jaops/api/yamcs/api"
	actions "github.com/jaops-space/grafana-yamcs-jaops/api/yamcs/protobuf/actions"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListLinksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name
	Instance      *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLinksRequest) Reset() {
	*x = ListLinksRequest{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksRequest) ProtoMessage() {}

func (x *ListLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksRequest.ProtoReflect.Descriptor instead.
func (*ListLinksRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{0}
}

func (x *ListLinksRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

type ListLinksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Links         []*LinkInfo            `protobuf:"bytes,1,rep,name=links" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLinksResponse) Reset() {
	*x = ListLinksResponse{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksResponse) ProtoMessage() {}

func (x *ListLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksResponse.ProtoReflect.Descriptor instead.
func (*ListLinksResponse) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{1}
}

func (x *ListLinksResponse) GetLinks() []*LinkInfo {
	if x != nil {
		return x.Links
	}
	return nil
}

type GetLinkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name
	Link          *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLinkRequest) Reset() {
	*x = GetLinkRequest{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkRequest) ProtoMessage() {}

func (x *GetLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkRequest.ProtoReflect.Descriptor instead.
func (*GetLinkRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{2}
}

func (x *GetLinkRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *GetLinkRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type EnableLinkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name
	Link          *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableLinkRequest) Reset() {
	*x = EnableLinkRequest{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableLinkRequest) ProtoMessage() {}

func (x *EnableLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableLinkRequest.ProtoReflect.Descriptor instead.
func (*EnableLinkRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{3}
}

func (x *EnableLinkRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *EnableLinkRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type DisableLinkRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name
	Link          *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableLinkRequest) Reset() {
	*x = DisableLinkRequest{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableLinkRequest) ProtoMessage() {}

func (x *DisableLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableLinkRequest.ProtoReflect.Descriptor instead.
func (*DisableLinkRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{4}
}

func (x *DisableLinkRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *DisableLinkRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type ResetLinkCountersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name
	Link          *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetLinkCountersRequest) Reset() {
	*x = ResetLinkCountersRequest{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetLinkCountersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetLinkCountersRequest) ProtoMessage() {}

func (x *ResetLinkCountersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetLinkCountersRequest.ProtoReflect.Descriptor instead.
func (*ResetLinkCountersRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{5}
}

func (x *ResetLinkCountersRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *ResetLinkCountersRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type RunActionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name
	Link *string `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	// Action name
	Action *string `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	// Action message
	Message       *structpb.Struct `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunActionRequest) Reset() {
	*x = RunActionRequest{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunActionRequest) ProtoMessage() {}

func (x *RunActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunActionRequest.ProtoReflect.Descriptor instead.
func (*RunActionRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{6}
}

func (x *RunActionRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *RunActionRequest) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

func (x *RunActionRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *RunActionRequest) GetMessage() *structpb.Struct {
	if x != nil {
		return x.Message
	}
	return nil
}

type LinkEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Detail for all links
	Links         []*LinkInfo `protobuf:"bytes,3,rep,name=links" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkEvent) Reset() {
	*x = LinkEvent{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkEvent) ProtoMessage() {}

func (x *LinkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkEvent.ProtoReflect.Descriptor instead.
func (*LinkEvent) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{7}
}

func (x *LinkEvent) GetLinks() []*LinkInfo {
	if x != nil {
		return x.Links
	}
	return nil
}

type SubscribeLinksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name
	Instance      *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeLinksRequest) Reset() {
	*x = SubscribeLinksRequest{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeLinksRequest) ProtoMessage() {}

func (x *SubscribeLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeLinksRequest.ProtoReflect.Descriptor instead.
func (*SubscribeLinksRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeLinksRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

type LinkInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Link name
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Java class name
	Type *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// Configuration
	Spec *string `protobuf:"bytes,4,opt,name=spec" json:"spec,omitempty"`
	// Whether this link is currently disabled.
	Disabled *bool   `protobuf:"varint,6,opt,name=disabled" json:"disabled,omitempty"`
	Status   *string `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	// Counter of inbound (received) data.
	// The unit of this is specific to each link.
	DataInCount *int64 `protobuf:"varint,10,opt,name=dataInCount" json:"dataInCount,omitempty"`
	// Counter of outbound (transmitted) data.
	// The unit of this is specific to each link.
	DataOutCount *int64 `protobuf:"varint,11,opt,name=dataOutCount" json:"dataOutCount,omitempty"`
	// Short status information
	DetailedStatus *string `protobuf:"bytes,9,opt,name=detailedStatus" json:"detailedStatus,omitempty"`
	// if this is a sublink of an aggregated data link, this is the name of the parent
	ParentName *string `protobuf:"bytes,12,opt,name=parentName" json:"parentName,omitempty"`
	// Custom actions
	Actions []*actions.ActionInfo `protobuf:"bytes,13,rep,name=actions" json:"actions,omitempty"`
	// Custom info fields
	Extra *structpb.Struct `protobuf:"bytes,14,opt,name=extra" json:"extra,omitempty"`
	// System parameters generated by this link
	Parameters    []string `protobuf:"bytes,15,rep,name=parameters" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkInfo) Reset() {
	*x = LinkInfo{}
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkInfo) ProtoMessage() {}

func (x *LinkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_links_links_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkInfo.ProtoReflect.Descriptor instead.
func (*LinkInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_links_links_proto_rawDescGZIP(), []int{9}
}

func (x *LinkInfo) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *LinkInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LinkInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *LinkInfo) GetSpec() string {
	if x != nil && x.Spec != nil {
		return *x.Spec
	}
	return ""
}

func (x *LinkInfo) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

func (x *LinkInfo) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *LinkInfo) GetDataInCount() int64 {
	if x != nil && x.DataInCount != nil {
		return *x.DataInCount
	}
	return 0
}

func (x *LinkInfo) GetDataOutCount() int64 {
	if x != nil && x.DataOutCount != nil {
		return *x.DataOutCount
	}
	return 0
}

func (x *LinkInfo) GetDetailedStatus() string {
	if x != nil && x.DetailedStatus != nil {
		return *x.DetailedStatus
	}
	return ""
}

func (x *LinkInfo) GetParentName() string {
	if x != nil && x.ParentName != nil {
		return *x.ParentName
	}
	return ""
}

func (x *LinkInfo) GetActions() []*actions.ActionInfo {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *LinkInfo) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *LinkInfo) GetParameters() []string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

var File_yamcs_protobuf_links_links_proto protoreflect.FileDescriptor

var file_yamcs_protobuf_links_links_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x1a, 0x1b, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x43, 0x0a, 0x11, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x44, 0x0a, 0x12, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x22, 0x4a, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x8d, 0x01,
	0x0a, 0x10, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a,
	0x09, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x22, 0x33, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xbd, 0x03, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x75, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a,
	0x04, 0x08, 0x08, 0x10, 0x09, 0x32, 0xf5, 0x07, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x41,
	0x70, 0x69, 0x12, 0x7a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x26, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1c, 0x8a, 0x92, 0x03, 0x18, 0x0a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x3f, 0x7d, 0x12, 0x73,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x24, 0x2e, 0x79, 0x61, 0x6d, 0x63,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x22, 0x8a, 0x92, 0x03, 0x1e, 0x0a, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x69,
	0x6e, 0x6b, 0x7d, 0x12, 0x97, 0x01, 0x0a, 0x0a, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x27, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x8a, 0x92, 0x03,
	0x3c, 0x62, 0x15, 0x4c, 0x69, 0x6e, 0x6b, 0x20, 0x27, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x27,
	0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f,
	0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x3a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x9b, 0x01,
	0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x28, 0x2e,
	0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x8a, 0x92, 0x03, 0x3e, 0x62, 0x16, 0x4c,
	0x69, 0x6e, 0x6b, 0x20, 0x27, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x27, 0x20, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x69,
	0x6e, 0x6b, 0x7d, 0x3a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x11,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x2e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x30, 0x8a, 0x92, 0x03, 0x2c, 0x1a, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f, 0x7b,
	0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x3a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x6d, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2b, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x0b, 0xda, 0x92, 0x03, 0x07, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x30, 0x01, 0x12, 0xb8, 0x01, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x22, 0x6a, 0x8a, 0x92, 0x03, 0x66, 0x3a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x62, 0x2c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x27, 0x7b, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x7d, 0x27, 0x20, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x20, 0x6f, 0x6e,
	0x20, 0x6c, 0x69, 0x6e, 0x6b, 0x20, 0x27, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x27, 0x1a, 0x2d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x7d, 0x2f, 0x7b, 0x6c, 0x69, 0x6e, 0x6b, 0x7d, 0x2f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x7d, 0x42, 0x74, 0x0a,
	0x18, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x11, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x43,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6f, 0x70, 0x73,
	0x2d, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2d, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2d, 0x6a, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6c, 0x69,
	0x6e, 0x6b, 0x73,
})

var (
	file_yamcs_protobuf_links_links_proto_rawDescOnce sync.Once
	file_yamcs_protobuf_links_links_proto_rawDescData []byte
)

func file_yamcs_protobuf_links_links_proto_rawDescGZIP() []byte {
	file_yamcs_protobuf_links_links_proto_rawDescOnce.Do(func() {
		file_yamcs_protobuf_links_links_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yamcs_protobuf_links_links_proto_rawDesc), len(file_yamcs_protobuf_links_links_proto_rawDesc)))
	})
	return file_yamcs_protobuf_links_links_proto_rawDescData
}

var file_yamcs_protobuf_links_links_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yamcs_protobuf_links_links_proto_goTypes = []any{
	(*ListLinksRequest)(nil),         // 0: yamcs.protobuf.links.ListLinksRequest
	(*ListLinksResponse)(nil),        // 1: yamcs.protobuf.links.ListLinksResponse
	(*GetLinkRequest)(nil),           // 2: yamcs.protobuf.links.GetLinkRequest
	(*EnableLinkRequest)(nil),        // 3: yamcs.protobuf.links.EnableLinkRequest
	(*DisableLinkRequest)(nil),       // 4: yamcs.protobuf.links.DisableLinkRequest
	(*ResetLinkCountersRequest)(nil), // 5: yamcs.protobuf.links.ResetLinkCountersRequest
	(*RunActionRequest)(nil),         // 6: yamcs.protobuf.links.RunActionRequest
	(*LinkEvent)(nil),                // 7: yamcs.protobuf.links.LinkEvent
	(*SubscribeLinksRequest)(nil),    // 8: yamcs.protobuf.links.SubscribeLinksRequest
	(*LinkInfo)(nil),                 // 9: yamcs.protobuf.links.LinkInfo
	(*structpb.Struct)(nil),          // 10: google.protobuf.Struct
	(*actions.ActionInfo)(nil),       // 11: yamcs.protobuf.actions.ActionInfo
}
var file_yamcs_protobuf_links_links_proto_depIdxs = []int32{
	9,  // 0: yamcs.protobuf.links.ListLinksResponse.links:type_name -> yamcs.protobuf.links.LinkInfo
	10, // 1: yamcs.protobuf.links.RunActionRequest.message:type_name -> google.protobuf.Struct
	9,  // 2: yamcs.protobuf.links.LinkEvent.links:type_name -> yamcs.protobuf.links.LinkInfo
	11, // 3: yamcs.protobuf.links.LinkInfo.actions:type_name -> yamcs.protobuf.actions.ActionInfo
	10, // 4: yamcs.protobuf.links.LinkInfo.extra:type_name -> google.protobuf.Struct
	0,  // 5: yamcs.protobuf.links.LinksApi.ListLinks:input_type -> yamcs.protobuf.links.ListLinksRequest
	2,  // 6: yamcs.protobuf.links.LinksApi.GetLink:input_type -> yamcs.protobuf.links.GetLinkRequest
	3,  // 7: yamcs.protobuf.links.LinksApi.EnableLink:input_type -> yamcs.protobuf.links.EnableLinkRequest
	4,  // 8: yamcs.protobuf.links.LinksApi.DisableLink:input_type -> yamcs.protobuf.links.DisableLinkRequest
	5,  // 9: yamcs.protobuf.links.LinksApi.ResetLinkCounters:input_type -> yamcs.protobuf.links.ResetLinkCountersRequest
	8,  // 10: yamcs.protobuf.links.LinksApi.SubscribeLinks:input_type -> yamcs.protobuf.links.SubscribeLinksRequest
	6,  // 11: yamcs.protobuf.links.LinksApi.RunAction:input_type -> yamcs.protobuf.links.RunActionRequest
	1,  // 12: yamcs.protobuf.links.LinksApi.ListLinks:output_type -> yamcs.protobuf.links.ListLinksResponse
	9,  // 13: yamcs.protobuf.links.LinksApi.GetLink:output_type -> yamcs.protobuf.links.LinkInfo
	9,  // 14: yamcs.protobuf.links.LinksApi.EnableLink:output_type -> yamcs.protobuf.links.LinkInfo
	9,  // 15: yamcs.protobuf.links.LinksApi.DisableLink:output_type -> yamcs.protobuf.links.LinkInfo
	9,  // 16: yamcs.protobuf.links.LinksApi.ResetLinkCounters:output_type -> yamcs.protobuf.links.LinkInfo
	7,  // 17: yamcs.protobuf.links.LinksApi.SubscribeLinks:output_type -> yamcs.protobuf.links.LinkEvent
	10, // 18: yamcs.protobuf.links.LinksApi.RunAction:output_type -> google.protobuf.Struct
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_yamcs_protobuf_links_links_proto_init() }
func file_yamcs_protobuf_links_links_proto_init() {
	if File_yamcs_protobuf_links_links_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yamcs_protobuf_links_links_proto_rawDesc), len(file_yamcs_protobuf_links_links_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yamcs_protobuf_links_links_proto_goTypes,
		DependencyIndexes: file_yamcs_protobuf_links_links_proto_depIdxs,
		MessageInfos:      file_yamcs_protobuf_links_links_proto_msgTypes,
	}.Build()
	File_yamcs_protobuf_links_links_proto = out.File
	file_yamcs_protobuf_links_links_proto_goTypes = nil
	file_yamcs_protobuf_links_links_proto_depIdxs = nil
}
