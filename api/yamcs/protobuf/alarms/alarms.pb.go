// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: yamcs/protobuf/alarms/alarms.proto

package alarms

import (
	protobuf "github.com/jaops-space/grafana-yamcs-jaops/api/yamcs/protobuf"
	events "github.com/jaops-space/grafana-yamcs-jaops/api/yamcs/protobuf/events"
	mdb "github.com/jaops-space/grafana-yamcs-jaops/api/yamcs/protobuf/mdb"
	pvalue "github.com/jaops-space/grafana-yamcs-jaops/api/yamcs/protobuf/pvalue"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlarmNotificationType int32

const (
	AlarmNotificationType_ACTIVE             AlarmNotificationType = 1  // Initial active alarms at the moment of request
	AlarmNotificationType_TRIGGERED          AlarmNotificationType = 2  // Whenever a new alarm triggers
	AlarmNotificationType_SEVERITY_INCREASED AlarmNotificationType = 3  // Whenever an alarm jumps severity
	AlarmNotificationType_VALUE_UPDATED      AlarmNotificationType = 4  // Whenever a value is updated (even if that value is not a violation by itself)
	AlarmNotificationType_ACKNOWLEDGED       AlarmNotificationType = 5  // Whenever somebody acknowledged an alarm (it could be that it is still OOL)
	AlarmNotificationType_CLEARED            AlarmNotificationType = 6  // When the alarm was really cleared by the server (acknowledged && not OOL)
	AlarmNotificationType_RTN                AlarmNotificationType = 7  // When the parameter that triggered the alarm has returned to normal (the alarm may still be triggered if it has not been acknowledged)
	AlarmNotificationType_SHELVED            AlarmNotificationType = 8  //when the alarm has been shelved
	AlarmNotificationType_UNSHELVED          AlarmNotificationType = 9  //when the alarm has been unshelved (either by operator request or automatically at timer expiration)
	AlarmNotificationType_RESET              AlarmNotificationType = 10 //when a latching alarm has been reset
)

// Enum value maps for AlarmNotificationType.
var (
	AlarmNotificationType_name = map[int32]string{
		1:  "ACTIVE",
		2:  "TRIGGERED",
		3:  "SEVERITY_INCREASED",
		4:  "VALUE_UPDATED",
		5:  "ACKNOWLEDGED",
		6:  "CLEARED",
		7:  "RTN",
		8:  "SHELVED",
		9:  "UNSHELVED",
		10: "RESET",
	}
	AlarmNotificationType_value = map[string]int32{
		"ACTIVE":             1,
		"TRIGGERED":          2,
		"SEVERITY_INCREASED": 3,
		"VALUE_UPDATED":      4,
		"ACKNOWLEDGED":       5,
		"CLEARED":            6,
		"RTN":                7,
		"SHELVED":            8,
		"UNSHELVED":          9,
		"RESET":              10,
	}
)

func (x AlarmNotificationType) Enum() *AlarmNotificationType {
	p := new(AlarmNotificationType)
	*p = x
	return p
}

func (x AlarmNotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlarmNotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_yamcs_protobuf_alarms_alarms_proto_enumTypes[0].Descriptor()
}

func (AlarmNotificationType) Type() protoreflect.EnumType {
	return &file_yamcs_protobuf_alarms_alarms_proto_enumTypes[0]
}

func (x AlarmNotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AlarmNotificationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AlarmNotificationType(num)
	return nil
}

// Deprecated: Use AlarmNotificationType.Descriptor instead.
func (AlarmNotificationType) EnumDescriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{0}
}

type AlarmType int32

const (
	AlarmType_PARAMETER AlarmType = 1
	AlarmType_EVENT     AlarmType = 2
)

// Enum value maps for AlarmType.
var (
	AlarmType_name = map[int32]string{
		1: "PARAMETER",
		2: "EVENT",
	}
	AlarmType_value = map[string]int32{
		"PARAMETER": 1,
		"EVENT":     2,
	}
)

func (x AlarmType) Enum() *AlarmType {
	p := new(AlarmType)
	*p = x
	return p
}

func (x AlarmType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlarmType) Descriptor() protoreflect.EnumDescriptor {
	return file_yamcs_protobuf_alarms_alarms_proto_enumTypes[1].Descriptor()
}

func (AlarmType) Type() protoreflect.EnumType {
	return &file_yamcs_protobuf_alarms_alarms_proto_enumTypes[1]
}

func (x AlarmType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AlarmType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AlarmType(num)
	return nil
}

// Deprecated: Use AlarmType.Descriptor instead.
func (AlarmType) EnumDescriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{1}
}

type AlarmSeverity int32

const (
	AlarmSeverity_WATCH    AlarmSeverity = 1
	AlarmSeverity_WARNING  AlarmSeverity = 2
	AlarmSeverity_DISTRESS AlarmSeverity = 3
	AlarmSeverity_CRITICAL AlarmSeverity = 4
	AlarmSeverity_SEVERE   AlarmSeverity = 5
)

// Enum value maps for AlarmSeverity.
var (
	AlarmSeverity_name = map[int32]string{
		1: "WATCH",
		2: "WARNING",
		3: "DISTRESS",
		4: "CRITICAL",
		5: "SEVERE",
	}
	AlarmSeverity_value = map[string]int32{
		"WATCH":    1,
		"WARNING":  2,
		"DISTRESS": 3,
		"CRITICAL": 4,
		"SEVERE":   5,
	}
)

func (x AlarmSeverity) Enum() *AlarmSeverity {
	p := new(AlarmSeverity)
	*p = x
	return p
}

func (x AlarmSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlarmSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_yamcs_protobuf_alarms_alarms_proto_enumTypes[2].Descriptor()
}

func (AlarmSeverity) Type() protoreflect.EnumType {
	return &file_yamcs_protobuf_alarms_alarms_proto_enumTypes[2]
}

func (x AlarmSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AlarmSeverity) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AlarmSeverity(num)
	return nil
}

// Deprecated: Use AlarmSeverity.Descriptor instead.
func (AlarmSeverity) EnumDescriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{2}
}

type AcknowledgeInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AcknowledgedBy     *string                `protobuf:"bytes,1,opt,name=acknowledgedBy" json:"acknowledgedBy,omitempty"`
	AcknowledgeMessage *string                `protobuf:"bytes,2,opt,name=acknowledgeMessage" json:"acknowledgeMessage,omitempty"`
	AcknowledgeTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=acknowledgeTime" json:"acknowledgeTime,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AcknowledgeInfo) Reset() {
	*x = AcknowledgeInfo{}
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeInfo) ProtoMessage() {}

func (x *AcknowledgeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeInfo.ProtoReflect.Descriptor instead.
func (*AcknowledgeInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{0}
}

func (x *AcknowledgeInfo) GetAcknowledgedBy() string {
	if x != nil && x.AcknowledgedBy != nil {
		return *x.AcknowledgedBy
	}
	return ""
}

func (x *AcknowledgeInfo) GetAcknowledgeMessage() string {
	if x != nil && x.AcknowledgeMessage != nil {
		return *x.AcknowledgeMessage
	}
	return ""
}

func (x *AcknowledgeInfo) GetAcknowledgeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AcknowledgeTime
	}
	return nil
}

type ShelveInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShelvedBy     *string                `protobuf:"bytes,1,opt,name=shelvedBy" json:"shelvedBy,omitempty"`
	ShelveMessage *string                `protobuf:"bytes,2,opt,name=shelveMessage" json:"shelveMessage,omitempty"`
	ShelveTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=shelveTime" json:"shelveTime,omitempty"`
	// when the shelving will expire (can be unset which means that it will never expire)
	ShelveExpiration *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=shelveExpiration" json:"shelveExpiration,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ShelveInfo) Reset() {
	*x = ShelveInfo{}
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShelveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShelveInfo) ProtoMessage() {}

func (x *ShelveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShelveInfo.ProtoReflect.Descriptor instead.
func (*ShelveInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{1}
}

func (x *ShelveInfo) GetShelvedBy() string {
	if x != nil && x.ShelvedBy != nil {
		return *x.ShelvedBy
	}
	return ""
}

func (x *ShelveInfo) GetShelveMessage() string {
	if x != nil && x.ShelveMessage != nil {
		return *x.ShelveMessage
	}
	return ""
}

func (x *ShelveInfo) GetShelveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ShelveTime
	}
	return nil
}

func (x *ShelveInfo) GetShelveExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.ShelveExpiration
	}
	return nil
}

type ClearInfo struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ClearedBy *string                `protobuf:"bytes,1,opt,name=clearedBy" json:"clearedBy,omitempty"`
	ClearTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=clearTime" json:"clearTime,omitempty"`
	// if the alarm has been manually cleared, this is the message provided by the operator
	ClearMessage  *string `protobuf:"bytes,3,opt,name=clearMessage" json:"clearMessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearInfo) Reset() {
	*x = ClearInfo{}
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearInfo) ProtoMessage() {}

func (x *ClearInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearInfo.ProtoReflect.Descriptor instead.
func (*ClearInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{2}
}

func (x *ClearInfo) GetClearedBy() string {
	if x != nil && x.ClearedBy != nil {
		return *x.ClearedBy
	}
	return ""
}

func (x *ClearInfo) GetClearTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ClearTime
	}
	return nil
}

func (x *ClearInfo) GetClearMessage() string {
	if x != nil && x.ClearMessage != nil {
		return *x.ClearMessage
	}
	return ""
}

// Summary of an alarm applicable for Parameter or Event (possibly
// other in the future) alarms.
// Contains detailed information on the value occurrence that initially
// triggered the alarm, the most severe value since it originally triggered,
// and the latest value at the time of your request.
type AlarmData struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Type        *AlarmType             `protobuf:"varint,1,opt,name=type,enum=yamcs.protobuf.alarms.AlarmType" json:"type,omitempty"`
	TriggerTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=triggerTime" json:"triggerTime,omitempty"`
	// For parameter alarms, this is the id of the parameters
	// For event alarms
	//   - the id.namespace is /yamcs/event/<EVENT_SOURCE>, unless
	//     EVENT_SOURCE starts with a "/" in which case the namespace
	//     is just the <EVENT_SOURCE>
	//   - the id.name is the <EVENT_TYPE>
	Id *protobuf.NamedObjectId `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// Distinguisher between multiple alarms for the same id
	SeqNum   *uint32        `protobuf:"varint,4,opt,name=seqNum" json:"seqNum,omitempty"`
	Severity *AlarmSeverity `protobuf:"varint,5,opt,name=severity,enum=yamcs.protobuf.alarms.AlarmSeverity" json:"severity,omitempty"`
	// Number of times the object was in alarm state
	Violations *uint32 `protobuf:"varint,6,opt,name=violations" json:"violations,omitempty"`
	// Number of samples received for the object
	Count            *uint32                `protobuf:"varint,7,opt,name=count" json:"count,omitempty"`
	AcknowledgeInfo  *AcknowledgeInfo       `protobuf:"bytes,8,opt,name=acknowledgeInfo" json:"acknowledgeInfo,omitempty"`
	NotificationType *AlarmNotificationType `protobuf:"varint,9,opt,name=notificationType,enum=yamcs.protobuf.alarms.AlarmNotificationType" json:"notificationType,omitempty"`
	// Additional detail in case the alarm is of type PARAMETER
	ParameterDetail *ParameterAlarmData `protobuf:"bytes,10,opt,name=parameterDetail" json:"parameterDetail,omitempty"`
	// Additional detail in case the alarm is of type EVENT
	EventDetail *EventAlarmData `protobuf:"bytes,11,opt,name=eventDetail" json:"eventDetail,omitempty"`
	// Whether the alarm will stay triggered even when the process is OK
	Latching *bool `protobuf:"varint,12,opt,name=latching" json:"latching,omitempty"`
	// if the process that generated the alarm is ok (i.e. parameter is within limits)
	ProcessOK *bool `protobuf:"varint,13,opt,name=processOK" json:"processOK,omitempty"`
	// triggered is same with processOK except when the alarm is latching
	Triggered *bool `protobuf:"varint,14,opt,name=triggered" json:"triggered,omitempty"`
	// if the operator has acknowledged the alarm
	Acknowledged *bool `protobuf:"varint,15,opt,name=acknowledged" json:"acknowledged,omitempty"`
	// Details in case the alarm was shelved
	ShelveInfo *ShelveInfo `protobuf:"bytes,16,opt,name=shelveInfo" json:"shelveInfo,omitempty"`
	ClearInfo  *ClearInfo  `protobuf:"bytes,17,opt,name=clearInfo" json:"clearInfo,omitempty"`
	// Time when the alarm was last updated
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updateTime" json:"updateTime,omitempty"`
	// Whether this alarm may be updated by this processor.
	// Set to false when the alarms are mirrored from another Yamcs instance.
	Readonly      *bool `protobuf:"varint,19,opt,name=readonly" json:"readonly,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlarmData) Reset() {
	*x = AlarmData{}
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlarmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmData) ProtoMessage() {}

func (x *AlarmData) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmData.ProtoReflect.Descriptor instead.
func (*AlarmData) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{3}
}

func (x *AlarmData) GetType() AlarmType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return AlarmType_PARAMETER
}

func (x *AlarmData) GetTriggerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TriggerTime
	}
	return nil
}

func (x *AlarmData) GetId() *protobuf.NamedObjectId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AlarmData) GetSeqNum() uint32 {
	if x != nil && x.SeqNum != nil {
		return *x.SeqNum
	}
	return 0
}

func (x *AlarmData) GetSeverity() AlarmSeverity {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return AlarmSeverity_WATCH
}

func (x *AlarmData) GetViolations() uint32 {
	if x != nil && x.Violations != nil {
		return *x.Violations
	}
	return 0
}

func (x *AlarmData) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *AlarmData) GetAcknowledgeInfo() *AcknowledgeInfo {
	if x != nil {
		return x.AcknowledgeInfo
	}
	return nil
}

func (x *AlarmData) GetNotificationType() AlarmNotificationType {
	if x != nil && x.NotificationType != nil {
		return *x.NotificationType
	}
	return AlarmNotificationType_ACTIVE
}

func (x *AlarmData) GetParameterDetail() *ParameterAlarmData {
	if x != nil {
		return x.ParameterDetail
	}
	return nil
}

func (x *AlarmData) GetEventDetail() *EventAlarmData {
	if x != nil {
		return x.EventDetail
	}
	return nil
}

func (x *AlarmData) GetLatching() bool {
	if x != nil && x.Latching != nil {
		return *x.Latching
	}
	return false
}

func (x *AlarmData) GetProcessOK() bool {
	if x != nil && x.ProcessOK != nil {
		return *x.ProcessOK
	}
	return false
}

func (x *AlarmData) GetTriggered() bool {
	if x != nil && x.Triggered != nil {
		return *x.Triggered
	}
	return false
}

func (x *AlarmData) GetAcknowledged() bool {
	if x != nil && x.Acknowledged != nil {
		return *x.Acknowledged
	}
	return false
}

func (x *AlarmData) GetShelveInfo() *ShelveInfo {
	if x != nil {
		return x.ShelveInfo
	}
	return nil
}

func (x *AlarmData) GetClearInfo() *ClearInfo {
	if x != nil {
		return x.ClearInfo
	}
	return nil
}

func (x *AlarmData) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *AlarmData) GetReadonly() bool {
	if x != nil && x.Readonly != nil {
		return *x.Readonly
	}
	return false
}

type ParameterAlarmData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TriggerValue    *pvalue.ParameterValue `protobuf:"bytes,1,opt,name=triggerValue" json:"triggerValue,omitempty"`
	MostSevereValue *pvalue.ParameterValue `protobuf:"bytes,2,opt,name=mostSevereValue" json:"mostSevereValue,omitempty"`
	CurrentValue    *pvalue.ParameterValue `protobuf:"bytes,3,opt,name=currentValue" json:"currentValue,omitempty"`
	Parameter       *mdb.ParameterInfo     `protobuf:"bytes,4,opt,name=parameter" json:"parameter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ParameterAlarmData) Reset() {
	*x = ParameterAlarmData{}
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParameterAlarmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParameterAlarmData) ProtoMessage() {}

func (x *ParameterAlarmData) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParameterAlarmData.ProtoReflect.Descriptor instead.
func (*ParameterAlarmData) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{4}
}

func (x *ParameterAlarmData) GetTriggerValue() *pvalue.ParameterValue {
	if x != nil {
		return x.TriggerValue
	}
	return nil
}

func (x *ParameterAlarmData) GetMostSevereValue() *pvalue.ParameterValue {
	if x != nil {
		return x.MostSevereValue
	}
	return nil
}

func (x *ParameterAlarmData) GetCurrentValue() *pvalue.ParameterValue {
	if x != nil {
		return x.CurrentValue
	}
	return nil
}

func (x *ParameterAlarmData) GetParameter() *mdb.ParameterInfo {
	if x != nil {
		return x.Parameter
	}
	return nil
}

type EventAlarmData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TriggerEvent    *events.Event          `protobuf:"bytes,1,opt,name=triggerEvent" json:"triggerEvent,omitempty"`
	MostSevereEvent *events.Event          `protobuf:"bytes,2,opt,name=mostSevereEvent" json:"mostSevereEvent,omitempty"`
	CurrentEvent    *events.Event          `protobuf:"bytes,3,opt,name=currentEvent" json:"currentEvent,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventAlarmData) Reset() {
	*x = EventAlarmData{}
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventAlarmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAlarmData) ProtoMessage() {}

func (x *EventAlarmData) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_alarms_alarms_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAlarmData.ProtoReflect.Descriptor instead.
func (*EventAlarmData) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP(), []int{5}
}

func (x *EventAlarmData) GetTriggerEvent() *events.Event {
	if x != nil {
		return x.TriggerEvent
	}
	return nil
}

func (x *EventAlarmData) GetMostSevereEvent() *events.Event {
	if x != nil {
		return x.MostSevereEvent
	}
	return nil
}

func (x *EventAlarmData) GetCurrentEvent() *events.Event {
	if x != nil {
		return x.CurrentEvent
	}
	return nil
}

var File_yamcs_protobuf_alarms_alarms_proto protoreflect.FileDescriptor

var file_yamcs_protobuf_alarms_alarms_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x79, 0x61, 0x6d,
	0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x64, 0x62, 0x2f, 0x6d, 0x64, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2f, 0x70, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x79, 0x61, 0x6d, 0x63,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf,
	0x01, 0x0a, 0x0f, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xd4, 0x01, 0x0a, 0x0a, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x64, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x46, 0x0a, 0x10, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xdf, 0x07, 0x0a, 0x09, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x50, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x73, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x53,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x4f, 0x4b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x4f, 0x4b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x68, 0x65, 0x6c,
	0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x73, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x09, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f,
	0x6e, 0x6c, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f,
	0x6e, 0x6c, 0x79, 0x22, 0xbc, 0x02, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x0c, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x70, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x6d, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x70, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6d, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x79,
	0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x3f, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x6d, 0x64, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x22, 0xdc, 0x01, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x6d, 0x6f, 0x73, 0x74, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0f,
	0x6d, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x76, 0x65, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x40, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2a, 0xac, 0x01, 0x0a, 0x15, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x49, 0x47, 0x47,
	0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x11,
	0x0a, 0x0d, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x45, 0x44, 0x10, 0x06,
	0x12, 0x07, 0x0a, 0x03, 0x52, 0x54, 0x4e, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x48, 0x45,
	0x4c, 0x56, 0x45, 0x44, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x53, 0x48, 0x45, 0x4c,
	0x56, 0x45, 0x44, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x0a,
	0x2a, 0x25, 0x0a, 0x09, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x2a, 0x4f, 0x0a, 0x0d, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x41, 0x54, 0x43,
	0x48, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x54, 0x52, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x45, 0x56, 0x45, 0x52, 0x45, 0x10, 0x05, 0x42, 0x69, 0x0a, 0x12, 0x6f, 0x72, 0x67, 0x2e,
	0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x0b,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6f, 0x70, 0x73, 0x2d,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x2d, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2d, 0x6a, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61,
	0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x73,
})

var (
	file_yamcs_protobuf_alarms_alarms_proto_rawDescOnce sync.Once
	file_yamcs_protobuf_alarms_alarms_proto_rawDescData []byte
)

func file_yamcs_protobuf_alarms_alarms_proto_rawDescGZIP() []byte {
	file_yamcs_protobuf_alarms_alarms_proto_rawDescOnce.Do(func() {
		file_yamcs_protobuf_alarms_alarms_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yamcs_protobuf_alarms_alarms_proto_rawDesc), len(file_yamcs_protobuf_alarms_alarms_proto_rawDesc)))
	})
	return file_yamcs_protobuf_alarms_alarms_proto_rawDescData
}

var file_yamcs_protobuf_alarms_alarms_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_yamcs_protobuf_alarms_alarms_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_yamcs_protobuf_alarms_alarms_proto_goTypes = []any{
	(AlarmNotificationType)(0),     // 0: yamcs.protobuf.alarms.AlarmNotificationType
	(AlarmType)(0),                 // 1: yamcs.protobuf.alarms.AlarmType
	(AlarmSeverity)(0),             // 2: yamcs.protobuf.alarms.AlarmSeverity
	(*AcknowledgeInfo)(nil),        // 3: yamcs.protobuf.alarms.AcknowledgeInfo
	(*ShelveInfo)(nil),             // 4: yamcs.protobuf.alarms.ShelveInfo
	(*ClearInfo)(nil),              // 5: yamcs.protobuf.alarms.ClearInfo
	(*AlarmData)(nil),              // 6: yamcs.protobuf.alarms.AlarmData
	(*ParameterAlarmData)(nil),     // 7: yamcs.protobuf.alarms.ParameterAlarmData
	(*EventAlarmData)(nil),         // 8: yamcs.protobuf.alarms.EventAlarmData
	(*timestamppb.Timestamp)(nil),  // 9: google.protobuf.Timestamp
	(*protobuf.NamedObjectId)(nil), // 10: yamcs.protobuf.NamedObjectId
	(*pvalue.ParameterValue)(nil),  // 11: yamcs.protobuf.pvalue.ParameterValue
	(*mdb.ParameterInfo)(nil),      // 12: yamcs.protobuf.mdb.ParameterInfo
	(*events.Event)(nil),           // 13: yamcs.protobuf.events.Event
}
var file_yamcs_protobuf_alarms_alarms_proto_depIdxs = []int32{
	9,  // 0: yamcs.protobuf.alarms.AcknowledgeInfo.acknowledgeTime:type_name -> google.protobuf.Timestamp
	9,  // 1: yamcs.protobuf.alarms.ShelveInfo.shelveTime:type_name -> google.protobuf.Timestamp
	9,  // 2: yamcs.protobuf.alarms.ShelveInfo.shelveExpiration:type_name -> google.protobuf.Timestamp
	9,  // 3: yamcs.protobuf.alarms.ClearInfo.clearTime:type_name -> google.protobuf.Timestamp
	1,  // 4: yamcs.protobuf.alarms.AlarmData.type:type_name -> yamcs.protobuf.alarms.AlarmType
	9,  // 5: yamcs.protobuf.alarms.AlarmData.triggerTime:type_name -> google.protobuf.Timestamp
	10, // 6: yamcs.protobuf.alarms.AlarmData.id:type_name -> yamcs.protobuf.NamedObjectId
	2,  // 7: yamcs.protobuf.alarms.AlarmData.severity:type_name -> yamcs.protobuf.alarms.AlarmSeverity
	3,  // 8: yamcs.protobuf.alarms.AlarmData.acknowledgeInfo:type_name -> yamcs.protobuf.alarms.AcknowledgeInfo
	0,  // 9: yamcs.protobuf.alarms.AlarmData.notificationType:type_name -> yamcs.protobuf.alarms.AlarmNotificationType
	7,  // 10: yamcs.protobuf.alarms.AlarmData.parameterDetail:type_name -> yamcs.protobuf.alarms.ParameterAlarmData
	8,  // 11: yamcs.protobuf.alarms.AlarmData.eventDetail:type_name -> yamcs.protobuf.alarms.EventAlarmData
	4,  // 12: yamcs.protobuf.alarms.AlarmData.shelveInfo:type_name -> yamcs.protobuf.alarms.ShelveInfo
	5,  // 13: yamcs.protobuf.alarms.AlarmData.clearInfo:type_name -> yamcs.protobuf.alarms.ClearInfo
	9,  // 14: yamcs.protobuf.alarms.AlarmData.updateTime:type_name -> google.protobuf.Timestamp
	11, // 15: yamcs.protobuf.alarms.ParameterAlarmData.triggerValue:type_name -> yamcs.protobuf.pvalue.ParameterValue
	11, // 16: yamcs.protobuf.alarms.ParameterAlarmData.mostSevereValue:type_name -> yamcs.protobuf.pvalue.ParameterValue
	11, // 17: yamcs.protobuf.alarms.ParameterAlarmData.currentValue:type_name -> yamcs.protobuf.pvalue.ParameterValue
	12, // 18: yamcs.protobuf.alarms.ParameterAlarmData.parameter:type_name -> yamcs.protobuf.mdb.ParameterInfo
	13, // 19: yamcs.protobuf.alarms.EventAlarmData.triggerEvent:type_name -> yamcs.protobuf.events.Event
	13, // 20: yamcs.protobuf.alarms.EventAlarmData.mostSevereEvent:type_name -> yamcs.protobuf.events.Event
	13, // 21: yamcs.protobuf.alarms.EventAlarmData.currentEvent:type_name -> yamcs.protobuf.events.Event
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_yamcs_protobuf_alarms_alarms_proto_init() }
func file_yamcs_protobuf_alarms_alarms_proto_init() {
	if File_yamcs_protobuf_alarms_alarms_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yamcs_protobuf_alarms_alarms_proto_rawDesc), len(file_yamcs_protobuf_alarms_alarms_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yamcs_protobuf_alarms_alarms_proto_goTypes,
		DependencyIndexes: file_yamcs_protobuf_alarms_alarms_proto_depIdxs,
		EnumInfos:         file_yamcs_protobuf_alarms_alarms_proto_enumTypes,
		MessageInfos:      file_yamcs_protobuf_alarms_alarms_proto_msgTypes,
	}.Build()
	File_yamcs_protobuf_alarms_alarms_proto = out.File
	file_yamcs_protobuf_alarms_alarms_proto_goTypes = nil
	file_yamcs_protobuf_alarms_alarms_proto_depIdxs = nil
}
