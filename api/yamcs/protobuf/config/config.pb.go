// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: yamcs/protobuf/config/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OptionType int32

const (
	OptionType_ANY             OptionType = 1
	OptionType_BOOLEAN         OptionType = 2
	OptionType_INTEGER         OptionType = 3
	OptionType_FLOAT           OptionType = 4
	OptionType_LIST            OptionType = 5
	OptionType_LIST_OR_ELEMENT OptionType = 6
	OptionType_MAP             OptionType = 7
	OptionType_STRING          OptionType = 8
)

// Enum value maps for OptionType.
var (
	OptionType_name = map[int32]string{
		1: "ANY",
		2: "BOOLEAN",
		3: "INTEGER",
		4: "FLOAT",
		5: "LIST",
		6: "LIST_OR_ELEMENT",
		7: "MAP",
		8: "STRING",
	}
	OptionType_value = map[string]int32{
		"ANY":             1,
		"BOOLEAN":         2,
		"INTEGER":         3,
		"FLOAT":           4,
		"LIST":            5,
		"LIST_OR_ELEMENT": 6,
		"MAP":             7,
		"STRING":          8,
	}
)

func (x OptionType) Enum() *OptionType {
	p := new(OptionType)
	*p = x
	return p
}

func (x OptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_yamcs_protobuf_config_config_proto_enumTypes[0].Descriptor()
}

func (OptionType) Type() protoreflect.EnumType {
	return &file_yamcs_protobuf_config_config_proto_enumTypes[0]
}

func (x OptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *OptionType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = OptionType(num)
	return nil
}

// Deprecated: Use OptionType.Descriptor instead.
func (OptionType) EnumDescriptor() ([]byte, []int) {
	return file_yamcs_protobuf_config_config_proto_rawDescGZIP(), []int{0}
}

// Specifies the valid structure of a configuration map
type SpecInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Options for this specification
	Options []*OptionInfo `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
	// If true, any option is allowed
	AllowUnknownKeys *bool `protobuf:"varint,2,opt,name=allowUnknownKeys" json:"allowUnknownKeys,omitempty"`
	// Constraints on a groups of options. For each group at least one
	// of the keys must be specified.
	RequiredOneOf []*OptionGroupInfo `protobuf:"bytes,3,rep,name=requiredOneOf" json:"requiredOneOf,omitempty"`
	// Constraints on a group of options. For each group, all keys must
	// be specified, or none at all.
	RequireTogether []*OptionGroupInfo `protobuf:"bytes,4,rep,name=requireTogether" json:"requireTogether,omitempty"`
	// Conditional constraints on a group of options
	WhenConditions []*WhenConditionInfo `protobuf:"bytes,5,rep,name=whenConditions" json:"whenConditions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SpecInfo) Reset() {
	*x = SpecInfo{}
	mi := &file_yamcs_protobuf_config_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecInfo) ProtoMessage() {}

func (x *SpecInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_config_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecInfo.ProtoReflect.Descriptor instead.
func (*SpecInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *SpecInfo) GetOptions() []*OptionInfo {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SpecInfo) GetAllowUnknownKeys() bool {
	if x != nil && x.AllowUnknownKeys != nil {
		return *x.AllowUnknownKeys
	}
	return false
}

func (x *SpecInfo) GetRequiredOneOf() []*OptionGroupInfo {
	if x != nil {
		return x.RequiredOneOf
	}
	return nil
}

func (x *SpecInfo) GetRequireTogether() []*OptionGroupInfo {
	if x != nil {
		return x.RequireTogether
	}
	return nil
}

func (x *SpecInfo) GetWhenConditions() []*WhenConditionInfo {
	if x != nil {
		return x.WhenConditions
	}
	return nil
}

type OptionGroupInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Option keys
	Keys          []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptionGroupInfo) Reset() {
	*x = OptionGroupInfo{}
	mi := &file_yamcs_protobuf_config_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionGroupInfo) ProtoMessage() {}

func (x *OptionGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_config_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionGroupInfo.ProtoReflect.Descriptor instead.
func (*OptionGroupInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *OptionGroupInfo) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type WhenConditionInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Option key for checking the condition
	Key *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Value to compare with
	Value *structpb.Value `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	// Option keys that must be specified, if the condition is satisfied
	RequiredKeys  []string `protobuf:"bytes,3,rep,name=requiredKeys" json:"requiredKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhenConditionInfo) Reset() {
	*x = WhenConditionInfo{}
	mi := &file_yamcs_protobuf_config_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhenConditionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhenConditionInfo) ProtoMessage() {}

func (x *WhenConditionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_config_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhenConditionInfo.ProtoReflect.Descriptor instead.
func (*WhenConditionInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *WhenConditionInfo) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *WhenConditionInfo) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *WhenConditionInfo) GetRequiredKeys() []string {
	if x != nil {
		return x.RequiredKeys
	}
	return nil
}

type OptionInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of this option, unique within a spec
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Type of this option
	Type *OptionType `protobuf:"varint,2,opt,name=type,enum=yamcs.protobuf.config.OptionType" json:"type,omitempty"`
	// UI-friendly label for this option
	Title *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	// Default value when the option is not specified
	Default *structpb.Value `protobuf:"bytes,4,opt,name=default" json:"default,omitempty"`
	// Whether this options must be specified
	Required *bool `protobuf:"varint,5,opt,name=required" json:"required,omitempty"`
	// Hint that this option should be excluded from any
	// document generation
	Hidden *bool `protobuf:"varint,6,opt,name=hidden" json:"hidden,omitempty"`
	// Hint that value for this option should not be
	// logged
	Secret *bool `protobuf:"varint,7,opt,name=secret" json:"secret,omitempty"`
	// Which version of this software this option was added.
	// Can be the Yamcs version, or the version of a plugin.
	VersionAdded *string `protobuf:"bytes,8,opt,name=versionAdded" json:"versionAdded,omitempty"`
	// Deprecation message for this option
	DeprecationMessage *string `protobuf:"bytes,9,opt,name=deprecationMessage" json:"deprecationMessage,omitempty"`
	// Description, each list entry represents a paragraph
	Description []string `protobuf:"bytes,10,rep,name=description" json:"description,omitempty"`
	// When the type is “LIST“ or “LIST_OR_ELEMENT“, this indicates the type
	// of each element of that list
	ElementType *OptionType `protobuf:"varint,11,opt,name=elementType,enum=yamcs.protobuf.config.OptionType" json:"elementType,omitempty"`
	// When the type or elementType is “MAP“, this specifies
	// the options with that map
	Spec *SpecInfo `protobuf:"bytes,12,opt,name=spec" json:"spec,omitempty"`
	// Allowed values for this option
	Choices []*structpb.Value `protobuf:"bytes,13,rep,name=choices" json:"choices,omitempty"`
	// When the type is “MAP“, this property determines whether default values
	// are generated even when a value for that option was not provided.
	ApplySpecDefaults *bool `protobuf:"varint,14,opt,name=applySpecDefaults" json:"applySpecDefaults,omitempty"`
	// Additional names that can be used for this option
	Aliases       []string `protobuf:"bytes,15,rep,name=aliases" json:"aliases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptionInfo) Reset() {
	*x = OptionInfo{}
	mi := &file_yamcs_protobuf_config_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionInfo) ProtoMessage() {}

func (x *OptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_config_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionInfo.ProtoReflect.Descriptor instead.
func (*OptionInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *OptionInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *OptionInfo) GetType() OptionType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return OptionType_ANY
}

func (x *OptionInfo) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *OptionInfo) GetDefault() *structpb.Value {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *OptionInfo) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *OptionInfo) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

func (x *OptionInfo) GetSecret() bool {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return false
}

func (x *OptionInfo) GetVersionAdded() string {
	if x != nil && x.VersionAdded != nil {
		return *x.VersionAdded
	}
	return ""
}

func (x *OptionInfo) GetDeprecationMessage() string {
	if x != nil && x.DeprecationMessage != nil {
		return *x.DeprecationMessage
	}
	return ""
}

func (x *OptionInfo) GetDescription() []string {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *OptionInfo) GetElementType() OptionType {
	if x != nil && x.ElementType != nil {
		return *x.ElementType
	}
	return OptionType_ANY
}

func (x *OptionInfo) GetSpec() *SpecInfo {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *OptionInfo) GetChoices() []*structpb.Value {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *OptionInfo) GetApplySpecDefaults() bool {
	if x != nil && x.ApplySpecDefaults != nil {
		return *x.ApplySpecDefaults
	}
	return false
}

func (x *OptionInfo) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

var File_yamcs_protobuf_config_config_proto protoreflect.FileDescriptor

var file_yamcs_protobuf_config_config_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x02, 0x0a, 0x08, 0x53, 0x70,
	0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x4c, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x66,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x12, 0x50, 0x0a,
	0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x6f, 0x67, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x6f, 0x67, 0x65, 0x74, 0x68, 0x65, 0x72, 0x12,
	0x50, 0x0a, 0x0e, 0x77, 0x68, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x57, 0x68, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x77, 0x68, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x25, 0x0a, 0x0f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x77, 0x0a, 0x11, 0x57, 0x68, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0xd5, 0x04, 0x0a, 0x0a, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x79, 0x61, 0x6d,
	0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12,
	0x30, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x2a, 0x6e, 0x0a, 0x0a, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c,
	0x4f, 0x41, 0x54, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x05, 0x12,
	0x13, 0x0a, 0x0f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10, 0x07, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x42, 0x70, 0x0a, 0x19, 0x6f, 0x72, 0x67,
	0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6a, 0x61, 0x6f, 0x70, 0x73, 0x2d, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x72,
	0x61, 0x66, 0x61, 0x6e, 0x61, 0x2d, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2d, 0x6a, 0x61, 0x6f, 0x70,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
})

var (
	file_yamcs_protobuf_config_config_proto_rawDescOnce sync.Once
	file_yamcs_protobuf_config_config_proto_rawDescData []byte
)

func file_yamcs_protobuf_config_config_proto_rawDescGZIP() []byte {
	file_yamcs_protobuf_config_config_proto_rawDescOnce.Do(func() {
		file_yamcs_protobuf_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yamcs_protobuf_config_config_proto_rawDesc), len(file_yamcs_protobuf_config_config_proto_rawDesc)))
	})
	return file_yamcs_protobuf_config_config_proto_rawDescData
}

var file_yamcs_protobuf_config_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yamcs_protobuf_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_yamcs_protobuf_config_config_proto_goTypes = []any{
	(OptionType)(0),           // 0: yamcs.protobuf.config.OptionType
	(*SpecInfo)(nil),          // 1: yamcs.protobuf.config.SpecInfo
	(*OptionGroupInfo)(nil),   // 2: yamcs.protobuf.config.OptionGroupInfo
	(*WhenConditionInfo)(nil), // 3: yamcs.protobuf.config.WhenConditionInfo
	(*OptionInfo)(nil),        // 4: yamcs.protobuf.config.OptionInfo
	(*structpb.Value)(nil),    // 5: google.protobuf.Value
}
var file_yamcs_protobuf_config_config_proto_depIdxs = []int32{
	4,  // 0: yamcs.protobuf.config.SpecInfo.options:type_name -> yamcs.protobuf.config.OptionInfo
	2,  // 1: yamcs.protobuf.config.SpecInfo.requiredOneOf:type_name -> yamcs.protobuf.config.OptionGroupInfo
	2,  // 2: yamcs.protobuf.config.SpecInfo.requireTogether:type_name -> yamcs.protobuf.config.OptionGroupInfo
	3,  // 3: yamcs.protobuf.config.SpecInfo.whenConditions:type_name -> yamcs.protobuf.config.WhenConditionInfo
	5,  // 4: yamcs.protobuf.config.WhenConditionInfo.value:type_name -> google.protobuf.Value
	0,  // 5: yamcs.protobuf.config.OptionInfo.type:type_name -> yamcs.protobuf.config.OptionType
	5,  // 6: yamcs.protobuf.config.OptionInfo.default:type_name -> google.protobuf.Value
	0,  // 7: yamcs.protobuf.config.OptionInfo.elementType:type_name -> yamcs.protobuf.config.OptionType
	1,  // 8: yamcs.protobuf.config.OptionInfo.spec:type_name -> yamcs.protobuf.config.SpecInfo
	5,  // 9: yamcs.protobuf.config.OptionInfo.choices:type_name -> google.protobuf.Value
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_yamcs_protobuf_config_config_proto_init() }
func file_yamcs_protobuf_config_config_proto_init() {
	if File_yamcs_protobuf_config_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yamcs_protobuf_config_config_proto_rawDesc), len(file_yamcs_protobuf_config_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yamcs_protobuf_config_config_proto_goTypes,
		DependencyIndexes: file_yamcs_protobuf_config_config_proto_depIdxs,
		EnumInfos:         file_yamcs_protobuf_config_config_proto_enumTypes,
		MessageInfos:      file_yamcs_protobuf_config_config_proto_msgTypes,
	}.Build()
	File_yamcs_protobuf_config_config_proto = out.File
	file_yamcs_protobuf_config_config_proto_goTypes = nil
	file_yamcs_protobuf_config_config_proto_depIdxs = nil
}
