// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: yamcs/protobuf/yamcsManagement/yamcsManagement.proto

package yamcsManagement

import (
	protobuf "github.com/jaops-space/grafana-yamcs-jaops/api/yamcs/protobuf"
	services "github.com/jaops-space/grafana-yamcs-jaops/api/yamcs/protobuf/services"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessorManagementRequest_Operation int32

const (
	ProcessorManagementRequest_CREATE_PROCESSOR     ProcessorManagementRequest_Operation = 0
	ProcessorManagementRequest_CONNECT_TO_PROCESSOR ProcessorManagementRequest_Operation = 1
)

// Enum value maps for ProcessorManagementRequest_Operation.
var (
	ProcessorManagementRequest_Operation_name = map[int32]string{
		0: "CREATE_PROCESSOR",
		1: "CONNECT_TO_PROCESSOR",
	}
	ProcessorManagementRequest_Operation_value = map[string]int32{
		"CREATE_PROCESSOR":     0,
		"CONNECT_TO_PROCESSOR": 1,
	}
)

func (x ProcessorManagementRequest_Operation) Enum() *ProcessorManagementRequest_Operation {
	p := new(ProcessorManagementRequest_Operation)
	*p = x
	return p
}

func (x ProcessorManagementRequest_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessorManagementRequest_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_enumTypes[0].Descriptor()
}

func (ProcessorManagementRequest_Operation) Type() protoreflect.EnumType {
	return &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_enumTypes[0]
}

func (x ProcessorManagementRequest_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ProcessorManagementRequest_Operation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ProcessorManagementRequest_Operation(num)
	return nil
}

// Deprecated: Use ProcessorManagementRequest_Operation.Descriptor instead.
func (ProcessorManagementRequest_Operation) EnumDescriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{4, 0}
}

type ProcessorRequest_Operation int32

const (
	// Pause the processor
	ProcessorRequest_PAUSE ProcessorRequest_Operation = 2
	// Resume the processor
	ProcessorRequest_RESUME ProcessorRequest_Operation = 3
	// Seek to a specific time
	ProcessorRequest_SEEK ProcessorRequest_Operation = 4
	// Change speed of a processor
	ProcessorRequest_CHANGE_SPEED ProcessorRequest_Operation = 5
)

// Enum value maps for ProcessorRequest_Operation.
var (
	ProcessorRequest_Operation_name = map[int32]string{
		2: "PAUSE",
		3: "RESUME",
		4: "SEEK",
		5: "CHANGE_SPEED",
	}
	ProcessorRequest_Operation_value = map[string]int32{
		"PAUSE":        2,
		"RESUME":       3,
		"SEEK":         4,
		"CHANGE_SPEED": 5,
	}
)

func (x ProcessorRequest_Operation) Enum() *ProcessorRequest_Operation {
	p := new(ProcessorRequest_Operation)
	*p = x
	return p
}

func (x ProcessorRequest_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessorRequest_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_enumTypes[1].Descriptor()
}

func (ProcessorRequest_Operation) Type() protoreflect.EnumType {
	return &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_enumTypes[1]
}

func (x ProcessorRequest_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ProcessorRequest_Operation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ProcessorRequest_Operation(num)
	return nil
}

// Deprecated: Use ProcessorRequest_Operation.Descriptor instead.
func (ProcessorRequest_Operation) EnumDescriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{5, 0}
}

type StreamEvent_Type int32

const (
	// A new stream was created
	StreamEvent_CREATED StreamEvent_Type = 1
	// A stream was deleted
	StreamEvent_DELETED StreamEvent_Type = 2
	// A stream's info was updated
	StreamEvent_UPDATED StreamEvent_Type = 3
)

// Enum value maps for StreamEvent_Type.
var (
	StreamEvent_Type_name = map[int32]string{
		1: "CREATED",
		2: "DELETED",
		3: "UPDATED",
	}
	StreamEvent_Type_value = map[string]int32{
		"CREATED": 1,
		"DELETED": 2,
		"UPDATED": 3,
	}
)

func (x StreamEvent_Type) Enum() *StreamEvent_Type {
	p := new(StreamEvent_Type)
	*p = x
	return p
}

func (x StreamEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_enumTypes[2].Descriptor()
}

func (StreamEvent_Type) Type() protoreflect.EnumType {
	return &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_enumTypes[2]
}

func (x StreamEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StreamEvent_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StreamEvent_Type(num)
	return nil
}

// Deprecated: Use StreamEvent_Type.Descriptor instead.
func (StreamEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{6, 0}
}

type ProcessorInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Processor name.
	Name                  *string                            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type                  *string                            `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Spec                  *string                            `protobuf:"bytes,4,opt,name=spec" json:"spec,omitempty"`
	Creator               *string                            `protobuf:"bytes,5,opt,name=creator" json:"creator,omitempty"`
	HasAlarms             *bool                              `protobuf:"varint,6,opt,name=hasAlarms" json:"hasAlarms,omitempty"`
	HasCommanding         *bool                              `protobuf:"varint,7,opt,name=hasCommanding" json:"hasCommanding,omitempty"`
	State                 *services.ServiceState             `protobuf:"varint,8,opt,name=state,enum=yamcs.protobuf.services.ServiceState" json:"state,omitempty"`
	ReplayRequest         *protobuf.ReplayRequest            `protobuf:"bytes,9,opt,name=replayRequest" json:"replayRequest,omitempty"`                                            //in case of replay
	ReplayState           *protobuf.ReplayStatus_ReplayState `protobuf:"varint,10,opt,name=replayState,enum=yamcs.protobuf.ReplayStatus_ReplayState" json:"replayState,omitempty"` //in case of replay
	Services              []*services.ServiceInfo            `protobuf:"bytes,16,rep,name=services" json:"services,omitempty"`
	Persistent            *bool                              `protobuf:"varint,17,opt,name=persistent" json:"persistent,omitempty"`
	Time                  *timestamppb.Timestamp             `protobuf:"bytes,18,opt,name=time" json:"time,omitempty"`
	Replay                *bool                              `protobuf:"varint,19,opt,name=replay" json:"replay,omitempty"`
	CheckCommandClearance *bool                              `protobuf:"varint,20,opt,name=checkCommandClearance" json:"checkCommandClearance,omitempty"`
	// If true, this processor can not be deleted.
	Protected *bool `protobuf:"varint,21,opt,name=protected" json:"protected,omitempty"`
	// Globally available acknowledgments (in addition to Acknowledge_Queued,
	// Acknowledge_Released and Acknowledge_Sent)
	Acknowledgments []*AcknowledgmentInfo `protobuf:"bytes,22,rep,name=acknowledgments" json:"acknowledgments,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProcessorInfo) Reset() {
	*x = ProcessorInfo{}
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorInfo) ProtoMessage() {}

func (x *ProcessorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorInfo.ProtoReflect.Descriptor instead.
func (*ProcessorInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessorInfo) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *ProcessorInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProcessorInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ProcessorInfo) GetSpec() string {
	if x != nil && x.Spec != nil {
		return *x.Spec
	}
	return ""
}

func (x *ProcessorInfo) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *ProcessorInfo) GetHasAlarms() bool {
	if x != nil && x.HasAlarms != nil {
		return *x.HasAlarms
	}
	return false
}

func (x *ProcessorInfo) GetHasCommanding() bool {
	if x != nil && x.HasCommanding != nil {
		return *x.HasCommanding
	}
	return false
}

func (x *ProcessorInfo) GetState() services.ServiceState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return services.ServiceState(0)
}

func (x *ProcessorInfo) GetReplayRequest() *protobuf.ReplayRequest {
	if x != nil {
		return x.ReplayRequest
	}
	return nil
}

func (x *ProcessorInfo) GetReplayState() protobuf.ReplayStatus_ReplayState {
	if x != nil && x.ReplayState != nil {
		return *x.ReplayState
	}
	return protobuf.ReplayStatus_ReplayState(0)
}

func (x *ProcessorInfo) GetServices() []*services.ServiceInfo {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ProcessorInfo) GetPersistent() bool {
	if x != nil && x.Persistent != nil {
		return *x.Persistent
	}
	return false
}

func (x *ProcessorInfo) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ProcessorInfo) GetReplay() bool {
	if x != nil && x.Replay != nil {
		return *x.Replay
	}
	return false
}

func (x *ProcessorInfo) GetCheckCommandClearance() bool {
	if x != nil && x.CheckCommandClearance != nil {
		return *x.CheckCommandClearance
	}
	return false
}

func (x *ProcessorInfo) GetProtected() bool {
	if x != nil && x.Protected != nil {
		return *x.Protected
	}
	return false
}

func (x *ProcessorInfo) GetAcknowledgments() []*AcknowledgmentInfo {
	if x != nil {
		return x.Acknowledgments
	}
	return nil
}

type AcknowledgmentInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Acknowledgment name
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Description of the acknowledgment
	Description   *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcknowledgmentInfo) Reset() {
	*x = AcknowledgmentInfo{}
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgmentInfo) ProtoMessage() {}

func (x *AcknowledgmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgmentInfo.ProtoReflect.Descriptor instead.
func (*AcknowledgmentInfo) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{1}
}

func (x *AcknowledgmentInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AcknowledgmentInfo) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type TmStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Packet name.
	PacketName               *string                `protobuf:"bytes,1,opt,name=packetName" json:"packetName,omitempty"`
	QualifiedName            *string                `protobuf:"bytes,9,opt,name=qualifiedName" json:"qualifiedName,omitempty"`
	ReceivedPackets          *int64                 `protobuf:"varint,2,opt,name=receivedPackets" json:"receivedPackets,omitempty"`
	SubscribedParameterCount *int32                 `protobuf:"varint,6,opt,name=subscribedParameterCount" json:"subscribedParameterCount,omitempty"`
	LastReceived             *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=lastReceived" json:"lastReceived,omitempty"`
	LastPacketTime           *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=lastPacketTime" json:"lastPacketTime,omitempty"`
	PacketRate               *int64                 `protobuf:"varint,12,opt,name=packetRate" json:"packetRate,omitempty"`
	DataRate                 *int64                 `protobuf:"varint,13,opt,name=dataRate" json:"dataRate,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TmStatistics) Reset() {
	*x = TmStatistics{}
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TmStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmStatistics) ProtoMessage() {}

func (x *TmStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmStatistics.ProtoReflect.Descriptor instead.
func (*TmStatistics) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{2}
}

func (x *TmStatistics) GetPacketName() string {
	if x != nil && x.PacketName != nil {
		return *x.PacketName
	}
	return ""
}

func (x *TmStatistics) GetQualifiedName() string {
	if x != nil && x.QualifiedName != nil {
		return *x.QualifiedName
	}
	return ""
}

func (x *TmStatistics) GetReceivedPackets() int64 {
	if x != nil && x.ReceivedPackets != nil {
		return *x.ReceivedPackets
	}
	return 0
}

func (x *TmStatistics) GetSubscribedParameterCount() int32 {
	if x != nil && x.SubscribedParameterCount != nil {
		return *x.SubscribedParameterCount
	}
	return 0
}

func (x *TmStatistics) GetLastReceived() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReceived
	}
	return nil
}

func (x *TmStatistics) GetLastPacketTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPacketTime
	}
	return nil
}

func (x *TmStatistics) GetPacketRate() int64 {
	if x != nil && x.PacketRate != nil {
		return *x.PacketRate
	}
	return 0
}

func (x *TmStatistics) GetDataRate() int64 {
	if x != nil && x.DataRate != nil {
		return *x.DataRate
	}
	return 0
}

type Statistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Yamcs instance name.
	Instance *string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	// Processor name.
	Processor     *string                `protobuf:"bytes,7,opt,name=processor" json:"processor,omitempty"`
	Tmstats       []*TmStatistics        `protobuf:"bytes,3,rep,name=tmstats" json:"tmstats,omitempty"`
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=lastUpdated" json:"lastUpdated,omitempty"` //java local time of the last update
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{3}
}

func (x *Statistics) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *Statistics) GetProcessor() string {
	if x != nil && x.Processor != nil {
		return *x.Processor
	}
	return ""
}

func (x *Statistics) GetTmstats() []*TmStatistics {
	if x != nil {
		return x.Tmstats
	}
	return nil
}

func (x *Statistics) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type ProcessorManagementRequest struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Operation     *ProcessorManagementRequest_Operation `protobuf:"varint,1,opt,name=operation,enum=yamcs.protobuf.yamcsManagement.ProcessorManagementRequest_Operation" json:"operation,omitempty"`
	Instance      *string                               `protobuf:"bytes,2,opt,name=instance" json:"instance,omitempty"`            //yamcs instance
	Name          *string                               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`                    //processor name
	Type          *string                               `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`                    //only for CREATE
	Config        *string                               `protobuf:"bytes,5,opt,name=config" json:"config,omitempty"`                //only for CREATE - used to be called spec
	Persistent    *bool                                 `protobuf:"varint,7,opt,name=persistent,def=0" json:"persistent,omitempty"` //only for CREATE
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for ProcessorManagementRequest fields.
const (
	Default_ProcessorManagementRequest_Persistent = bool(false)
)

func (x *ProcessorManagementRequest) Reset() {
	*x = ProcessorManagementRequest{}
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessorManagementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorManagementRequest) ProtoMessage() {}

func (x *ProcessorManagementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorManagementRequest.ProtoReflect.Descriptor instead.
func (*ProcessorManagementRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessorManagementRequest) GetOperation() ProcessorManagementRequest_Operation {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return ProcessorManagementRequest_CREATE_PROCESSOR
}

func (x *ProcessorManagementRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *ProcessorManagementRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProcessorManagementRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ProcessorManagementRequest) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

func (x *ProcessorManagementRequest) GetPersistent() bool {
	if x != nil && x.Persistent != nil {
		return *x.Persistent
	}
	return Default_ProcessorManagementRequest_Persistent
}

type ProcessorRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Which operation to perform with this request
	Operation *ProcessorRequest_Operation `protobuf:"varint,1,opt,name=operation,enum=yamcs.protobuf.yamcsManagement.ProcessorRequest_Operation" json:"operation,omitempty"`
	// Yamcs instance name
	Instance *string `protobuf:"bytes,2,opt,name=instance" json:"instance,omitempty"`
	// Processor name
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// Time to seek to, when “operation“ is set to “SEEK“
	SeekTime *int64 `protobuf:"varint,4,opt,name=seekTime" json:"seekTime,omitempty"`
	// Speec, shen “operation“ is set to “CHANGE_SPEED“
	ReplaySpeed   *protobuf.ReplaySpeed `protobuf:"bytes,5,opt,name=replaySpeed" json:"replaySpeed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessorRequest) Reset() {
	*x = ProcessorRequest{}
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessorRequest) ProtoMessage() {}

func (x *ProcessorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessorRequest.ProtoReflect.Descriptor instead.
func (*ProcessorRequest) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessorRequest) GetOperation() ProcessorRequest_Operation {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return ProcessorRequest_PAUSE
}

func (x *ProcessorRequest) GetInstance() string {
	if x != nil && x.Instance != nil {
		return *x.Instance
	}
	return ""
}

func (x *ProcessorRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProcessorRequest) GetSeekTime() int64 {
	if x != nil && x.SeekTime != nil {
		return *x.SeekTime
	}
	return 0
}

func (x *ProcessorRequest) GetReplaySpeed() *protobuf.ReplaySpeed {
	if x != nil {
		return x.ReplaySpeed
	}
	return nil
}

type StreamEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event type
	Type *StreamEvent_Type `protobuf:"varint,1,opt,name=type,enum=yamcs.protobuf.yamcsManagement.StreamEvent_Type" json:"type,omitempty"`
	// Stream name
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Number of tuples
	DataCount     *int64 `protobuf:"varint,3,opt,name=dataCount" json:"dataCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEvent) Reset() {
	*x = StreamEvent{}
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent) ProtoMessage() {}

func (x *StreamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent.ProtoReflect.Descriptor instead.
func (*StreamEvent) Descriptor() ([]byte, []int) {
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP(), []int{6}
}

func (x *StreamEvent) GetType() StreamEvent_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return StreamEvent_CREATED
}

func (x *StreamEvent) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *StreamEvent) GetDataCount() int64 {
	if x != nil && x.DataCount != nil {
		return *x.DataCount
	}
	return 0
}

var File_yamcs_protobuf_yamcsManagement_yamcsManagement_proto protoreflect.FileDescriptor

var file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDesc = string([]byte{
	0x0a, 0x34, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x05, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x43, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x79, 0x61, 0x6d,
	0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12,
	0x5c, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x61, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4a, 0x0a,
	0x12, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x03, 0x0a, 0x0c, 0x54, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x61, 0x74, 0x65, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x4a, 0x04, 0x08, 0x04,
	0x10, 0x05, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x22, 0xde,
	0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x07, 0x74, 0x6d, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x07, 0x74, 0x6d, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x3c, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4a, 0x04, 0x08,
	0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22,
	0xc0, 0x02, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x44, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x4f, 0x52,
	0x10, 0x01, 0x22, 0xb7, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x79, 0x61, 0x6d,
	0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x79, 0x61, 0x6d, 0x63,
	0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x65, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x65, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52,
	0x0b, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22, 0x3e, 0x0a, 0x09,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x55,
	0x53, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x03,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x45, 0x4b, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x05, 0x22, 0xb4, 0x01, 0x0a,
	0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x79, 0x61, 0x6d,
	0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x79, 0x61, 0x6d, 0x63,
	0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x42, 0x7b, 0x0a, 0x12, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x61, 0x6d, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x14, 0x59, 0x61, 0x6d, 0x63, 0x73,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61,
	0x6f, 0x70, 0x73, 0x2d, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e,
	0x61, 0x2d, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2d, 0x6a, 0x61, 0x6f, 0x70, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x79, 0x61, 0x6d, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
})

var (
	file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescOnce sync.Once
	file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescData []byte
)

func file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescGZIP() []byte {
	file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescOnce.Do(func() {
		file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDesc), len(file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDesc)))
	})
	return file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDescData
}

var file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_goTypes = []any{
	(ProcessorManagementRequest_Operation)(0), // 0: yamcs.protobuf.yamcsManagement.ProcessorManagementRequest.Operation
	(ProcessorRequest_Operation)(0),           // 1: yamcs.protobuf.yamcsManagement.ProcessorRequest.Operation
	(StreamEvent_Type)(0),                     // 2: yamcs.protobuf.yamcsManagement.StreamEvent.Type
	(*ProcessorInfo)(nil),                     // 3: yamcs.protobuf.yamcsManagement.ProcessorInfo
	(*AcknowledgmentInfo)(nil),                // 4: yamcs.protobuf.yamcsManagement.AcknowledgmentInfo
	(*TmStatistics)(nil),                      // 5: yamcs.protobuf.yamcsManagement.TmStatistics
	(*Statistics)(nil),                        // 6: yamcs.protobuf.yamcsManagement.Statistics
	(*ProcessorManagementRequest)(nil),        // 7: yamcs.protobuf.yamcsManagement.ProcessorManagementRequest
	(*ProcessorRequest)(nil),                  // 8: yamcs.protobuf.yamcsManagement.ProcessorRequest
	(*StreamEvent)(nil),                       // 9: yamcs.protobuf.yamcsManagement.StreamEvent
	(services.ServiceState)(0),                // 10: yamcs.protobuf.services.ServiceState
	(*protobuf.ReplayRequest)(nil),            // 11: yamcs.protobuf.ReplayRequest
	(protobuf.ReplayStatus_ReplayState)(0),    // 12: yamcs.protobuf.ReplayStatus.ReplayState
	(*services.ServiceInfo)(nil),              // 13: yamcs.protobuf.services.ServiceInfo
	(*timestamppb.Timestamp)(nil),             // 14: google.protobuf.Timestamp
	(*protobuf.ReplaySpeed)(nil),              // 15: yamcs.protobuf.ReplaySpeed
}
var file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_depIdxs = []int32{
	10, // 0: yamcs.protobuf.yamcsManagement.ProcessorInfo.state:type_name -> yamcs.protobuf.services.ServiceState
	11, // 1: yamcs.protobuf.yamcsManagement.ProcessorInfo.replayRequest:type_name -> yamcs.protobuf.ReplayRequest
	12, // 2: yamcs.protobuf.yamcsManagement.ProcessorInfo.replayState:type_name -> yamcs.protobuf.ReplayStatus.ReplayState
	13, // 3: yamcs.protobuf.yamcsManagement.ProcessorInfo.services:type_name -> yamcs.protobuf.services.ServiceInfo
	14, // 4: yamcs.protobuf.yamcsManagement.ProcessorInfo.time:type_name -> google.protobuf.Timestamp
	4,  // 5: yamcs.protobuf.yamcsManagement.ProcessorInfo.acknowledgments:type_name -> yamcs.protobuf.yamcsManagement.AcknowledgmentInfo
	14, // 6: yamcs.protobuf.yamcsManagement.TmStatistics.lastReceived:type_name -> google.protobuf.Timestamp
	14, // 7: yamcs.protobuf.yamcsManagement.TmStatistics.lastPacketTime:type_name -> google.protobuf.Timestamp
	5,  // 8: yamcs.protobuf.yamcsManagement.Statistics.tmstats:type_name -> yamcs.protobuf.yamcsManagement.TmStatistics
	14, // 9: yamcs.protobuf.yamcsManagement.Statistics.lastUpdated:type_name -> google.protobuf.Timestamp
	0,  // 10: yamcs.protobuf.yamcsManagement.ProcessorManagementRequest.operation:type_name -> yamcs.protobuf.yamcsManagement.ProcessorManagementRequest.Operation
	1,  // 11: yamcs.protobuf.yamcsManagement.ProcessorRequest.operation:type_name -> yamcs.protobuf.yamcsManagement.ProcessorRequest.Operation
	15, // 12: yamcs.protobuf.yamcsManagement.ProcessorRequest.replaySpeed:type_name -> yamcs.protobuf.ReplaySpeed
	2,  // 13: yamcs.protobuf.yamcsManagement.StreamEvent.type:type_name -> yamcs.protobuf.yamcsManagement.StreamEvent.Type
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_init() }
func file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_init() {
	if File_yamcs_protobuf_yamcsManagement_yamcsManagement_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDesc), len(file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_goTypes,
		DependencyIndexes: file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_depIdxs,
		EnumInfos:         file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_enumTypes,
		MessageInfos:      file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_msgTypes,
	}.Build()
	File_yamcs_protobuf_yamcsManagement_yamcsManagement_proto = out.File
	file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_goTypes = nil
	file_yamcs_protobuf_yamcsManagement_yamcsManagement_proto_depIdxs = nil
}
